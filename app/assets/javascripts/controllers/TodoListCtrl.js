// Generated by CoffeeScript 1.10.0
angular.module('todo').controller("TodoListCtrl", function($scope, $routeParams, TodoList, Todo) {
  var lowerPositionsBelow, raisePositions, serverErrorHandler, todosBelow, updatePositions;
  $scope.init = function() {
    this.todoListService = new TodoList();
    this.todoService = new Todo(1);
    return $scope.list = this.todoListService.find($routeParams.list_id, function(res) {
      return $scope.totalTodos = res.totalTodos;
    });
  };
  $scope.addTodo = function(todoDescription) {
    var todo;
    raisePositions($scope.list);
    todo = this.todoService.create({
      description: todoDescription,
      completed: false
    });
    todo.position = 1;
    $scope.list.todos.unshift(todo);
    return $scope.todoDescription = "";
  };
  $scope.deleteTodo = function(todo) {
    lowerPositionsBelow($scope.list, todo);
    this.todoService["delete"](todo);
    return $scope.list.todos.splice($scope.list.todos.indexOf(todo), 1);
  };
  serverErrorHandler = function() {
    return alert("サーバーでエラーが発生しました。画面を更新し、もう一度試してください。");
  };
  $scope.toggleTodo = function(todo) {
    return this.todoService.update(todo, {
      completed: todo.completed
    });
  };
  $scope.search = function() {
    var params;
    params = {
      'q[description_cont]': $scope.descriptionCont,
      'q[completed_true]': $scope.completedTrue,
      'page': $scope.currentPage
    };
    return $scope.list = this.todoService.all(params, function(res) {
      return $scope.totalTodos = res.totalTodos;
    });
  };
  $scope.listNameEdited = function(listName) {
    return this.todoListService.update($scope.list, {
      name: listName
    });
  };
  $scope.todoDescriptionEdited = function(todo) {
    return this.todoService.update(todo, {
      description: todo.description
    });
  };
  $scope.sortListeners = {
    orderChanged: function(event) {
      return console.log("sorted: " + event.dest.index);
    }
  };
  $scope.positionChanged = function(todo) {
    return this.todoService.update(todo, {
      target_position: todo.position
    });
  };
  $scope.sortListeners = {
    orderChanged: function(event) {
      var newPosition, todo;
      newPosition = event.dest.index + 1;
      todo = event.source.itemScope.modelValue;
      todo.position = newPosition;
      return $scope.positionChanged(todo);
    }
  };
  raisePositions = function(list) {
    return angular.forEach(list.todos, function(todo) {
      return todo.position += 1;
    });
  };
  lowerPositionsBelow = function(list, todo) {
    return angular.forEach(todosBelow(list, todo), function(todo) {
      return todo.position -= 1;
    });
  };
  todosBelow = function(list, todo) {
    return list.todos.slice(list.todos.indexOf(todo), list.todos.length);
  };
  $scope.positionChanged = function(todo) {
    this.todoService.update(todo, {
      target_position: todo.position
    });
    return updatePositions($scope.list);
  };
  return updatePositions = function(list) {
    return angular.forEach(list.todos, function(todo, index) {
      return todo.position = index + 1;
    });
  };
});
